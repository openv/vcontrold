language: c

compiler:
  - gcc

include: &toolchain_amd64
  sudo: required
  addons:
    apt:
      packages:
      - cmake
      - libxml2-dev
      - python3-docutils
      - zip
      - checkinstall

include: &toolchain_cross
  sudo: required
  addons:
    apt:
      packages:
      - cmake
      - libxml2-dev
      - python3-docutils
      - gcc-arm-linux-gnueabihf
      - gcc-multilib-arm-linux-gnueabihf
      - libc6-dev-armhf-cross
      - zip
      - checkinstall
      - debootstrap
      - qemu-user-static
      - binfmt-support

include: &toolchain_linux_amd64
  <<: *toolchain_amd64
  env:
    - ARCH=$(dpkg --print-architecture)
    - TARGET=$(gcc -dumpmachine)
    - CC="gcc"
    - CMAKE_OPTS="-Wall"

include: &toolchain_linux_armhf
  <<: *toolchain_cross
  env:
    - CROSS_TOOLCHAIN="true"
    - ARCH="armhf"
    - RELEASE="stable"
    - TARGET="arm-linux-gnueabihf"
    - CC="${TARGET}-gcc"
    - CMAKE_OPTS="-Wall -DCMAKE_TOOLCHAIN_FILE=${TRAVIS_BUILD_DIR}/cmake/Toolchain-rpi.cmake"

env:
  global:
  - GH_REPO=$(echo -n "${TRAVIS_REPO_SLUG}" | cut -d "/" -f 2)
  - GH_USER=$(echo -n "${TRAVIS_REPO_SLUG}" | cut -d "/" -f 1)
  - CHROOT_DIR=${TRAVIS_BUILD_DIR}/chroot-raspbian-armhf

matrix:
  include:
  - os: linux
    <<: *toolchain_linux_amd64
  - os: linux
    <<: *toolchain_linux_armhf

before_cache:
  - if [[ "${CROSS_TOOLCHAIN}" == "true" ]] ; then sudo chown -R ${USER} ${CHROOT_DIR} ; fi

cache:
  directories:
    - ${CHROOT_DIR}

before_script:
  - test -d ${CHROOT_DIR} || mkdir ${CHROOT_DIR}
  - mkdir build
  - cd build
  - if [[ "${CROSS_TOOLCHAIN}" == "true" ]] ; then
      if  [[ "${CHROOT_DIR}" != "" ]] && find ${CHROOT_DIR} -iname "libxml2.so" 2>/dev/null | grep -q libxml2.so && find ${CHROOT_DIR} -iname "parser.h" 2>/dev/null | grep -q libxml ; then
        echo "Cache found" ;
      else
        sudo debootstrap  --foreign --no-check-gpg --variant=minbase --include=libxml2,libxml2-dev,libc6-dev --arch=armhf ${RELEASE} ${CHROOT_DIR} http://archive.raspbian.org/raspbian ;
        sudo cp /usr/bin/qemu-arm-static ${CHROOT_DIR}/usr/bin/ ;
        sudo chroot ${CHROOT_DIR} ./debootstrap/debootstrap --second-stage;
        for FILE in $(find ${CHROOT_DIR} -xtype l) ; do sudo ln -sf $(realpath --relative-to=$(dirname ${FILE}) ${CHROOT_DIR}/$(readlink ${FILE})) ${FILE} ; done;
      fi 
    fi

script:
  - cmake ${CMAKE_OPTS} ..
  - VERBOSE=1 cmake --build .
  - VERSION=$(sed -n -e 's/#define VERSION "\(.*\)"/\1/p' ${TRAVIS_BUILD_DIR}/src/version.h)
  - DEPLOYFILEPREFIX="${GH_REPO}_${VERSION}"
  - DEPLOYFILEPREFIX_BIN="${DEPLOYFILEPREFIX}-${TRAVIS_BUILD_NUMBER}_${ARCH}"

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - zip -j ${TRAVIS_BUILD_DIR}/${DEPLOYFILEPREFIX_BIN}.zip ${TRAVIS_BUILD_DIR}/build/vcontrold ${TRAVIS_BUILD_DIR}/build/vclient ${TRAVIS_BUILD_DIR}/build/doc/man/vcontrold.1.gz ${TRAVIS_BUILD_DIR}/build/doc/man/vclient.1.gz ${TRAVIS_BUILD_DIR}/COPYING ${TRAVIS_BUILD_DIR}/README.md
  - md5sum "${DEPLOYFILEPREFIX_BIN}.zip" > "${DEPLOYFILEPREFIX_BIN}.zip.md5sum"
  - sha256sum "${DEPLOYFILEPREFIX_BIN}.zip" > "${DEPLOYFILEPREFIX_BIN}.zip.sha256sum"
  - unzip -l ${TRAVIS_BUILD_DIR}/${DEPLOYFILEPREFIX_BIN}.zip
  - if [[ "${TRAVIS_BUILD_NUMBER}.1" == "${TRAVIS_JOB_NUMBER}" ]] ; then
      git archive --prefix "${GH_REPO}-${VERSION}/" -o "${DEPLOYFILEPREFIX}.orig.tar" ${TRAVIS_COMMIT} ;
      tar -rf "${DEPLOYFILEPREFIX}.orig.tar" --owner=root --group=root --transform="s#^#${GH_REPO}-${VERSION}/#" src/version.h ;
      tar --delete -f "${DEPLOYFILEPREFIX}.orig.tar" "${GH_REPO}-${VERSION}/.gitignore" "${GH_REPO}-${VERSION}/.travis.yml" ;
      gzip --best "${DEPLOYFILEPREFIX}.orig.tar" ;
      md5sum "${DEPLOYFILEPREFIX}.orig.tar.gz" > "${DEPLOYFILEPREFIX}.orig.tar.gz.md5sum" ;
      sha256sum "${DEPLOYFILEPREFIX}.orig.tar.gz" > "${DEPLOYFILEPREFIX}.orig.tar.gz.sha256sum" ;
      tar tzvf "${DEPLOYFILEPREFIX}.orig.tar.gz" --force-local ;
    fi
  - if [[ -n "${TRAVIS_TAG}" ]] ; then
      sudo checkinstall --strip=no --install=no --pkgname="$GH_REPO" --pkgversion="$VERSION" --pkgrelease=$TRAVIS_BUILD_NUMBER --arch="$ARCH" --maintainer="${GH_USER}@GitHub" --pkgsource="https://github.com/${GH_USER}/${GH_REPO}/releases/download/v${VERSION}/${DEPLOYFILEPREFIX}.orig.tar.gz" --pkgaltsource="https://github.com/${GH_USER}/${GH_REPO}/" --pkglicense="GPLv3" --pakdir=${TRAVIS_BUILD_DIR} -D -y cmake --build ./build/ --target install ;
      sudo chown travis "${DEPLOYFILEPREFIX_BIN}.deb" ;
      dpkg --info "${DEPLOYFILEPREFIX_BIN}.deb" ;
      dpkg --contents "${DEPLOYFILEPREFIX_BIN}.deb" ;
      md5sum "${DEPLOYFILEPREFIX_BIN}.deb" > "${DEPLOYFILEPREFIX_BIN}.deb.md5sum" ;
      sha256sum "${DEPLOYFILEPREFIX_BIN}.deb" > "${DEPLOYFILEPREFIX_BIN}.deb.sha256sum" ;
    fi
  - ls -laF ${TRAVIS_BUILD_DIR}/${DEPLOYFILEPREFIX}*

deploy:
  provider: releases
  api_key:
    secure: dzTS/n6w0WXczRZZ/4lbW+zX79aVgsY223d9EEeOneqSsekll9ilU+akEhY0z2SvZPMdeo4ywdhdtopEK+9q7yjeU7qFPC0hbXUIqDc1c78UqNl7X3/n+est7IR2yLdKUSLcLi6E35D0Wr5QEu1sJo2ktVkozaCb69Ql7VajZggyuL/vykJMHU15EVQ4jWVdY5vWJZ/m2gN93JD0FZl/TEdnJX9NkStCbrUFveM411nwwiG7sjh3aSCKqXIERACy6uK70nstMFKZeF+go48V60TVS46iATD5oq64X6Qa8HpfeVR/+307JhcpXd1cWw1MmfUxmKWjcM8A6nED1AY5K/GRPTOLs004N6NjmY5B4svzC2tWt6PQEX/rvOSvQg8d3lcgOBcTznRVhpOuj3O63U/TjNd9WaD5NPeUogqV9lNVXg8UgZ9hrxMs80qNJGAZyid8x7XfDQ5bVnuuAqpSlUuWsyPKdDolq5RMsOUQ/o/yvZdB45C/EX6gZLUPOeiR+GffnXDnniYQKQYm+wL5UcDjqSKZdLCgZMrKKd7rCVIcSqs0E36y8BubK3CeiLOMUxmjcrbSE7YHmYDcnwohczm6QRUDS/fPbzd/XfIuIRzRkc9mliDVCE2JXaRJQA5U+TINBHUMUfnyVSENLrQaOweg/pi96B5XoJKSs6vl9YE=
  file_glob: true
  file: ${TRAVIS_BUILD_DIR}/${DEPLOYFILEPREFIX}*
  skip_cleanup: true
  on:
    repo: openv/vcontrold
    branch: master
    tags: true
