environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      ARCH: x86
      CYGWIN: C:\Cygwin
      CYGSH: C:\Cygwin\bin\bash -lc
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      ARCH: x86_64
      CYGWIN: C:\Cygwin64
      CYGSH: C:\Cygwin64\bin\bash -lc

init:
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      Try
      {
          if ($env:APPVEYOR_REPO_TAG -eq "true")
          {
            Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
          }
          else
          {
            Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_COMMIT.substring(0,7))-dirty"
          }
      }
      Catch
      {
            Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_COMMIT.substring(0,7))-dirty"
      }

install:
  - "%CYGWIN%\\setup-%ARCH%.exe -q --no-shortcuts -P cygwin-devel,git,gcc-core,libxml2,libxml2-devel,cmake,p7zip,libiconv,libiconv-devel"
  - '%CYGWIN%\bin\cygcheck -dc cygwin'

build_script:
  - '%CYGSH% ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER && mkdir build"'
  - '%CYGSH% ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER/build && cmake -DMANPAGES=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON .."'
  - '%CYGSH% ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER/build && cmake --build ."'

after_build:
  - '%CYGSH% "echo $APPVEYOR_BUILD_VERSION > $APPVEYOR_BUILD_FOLDER/build/VERSION"'
  - '%CYGSH% "cd $APPVEYOR_BUILD_FOLDER/build && cp ../COPYING . && 7z a $APPVEYOR_BUILD_FOLDER/vcontrold_$(echo -n $APPVEYOR_BUILD_VERSION | sed -e s/^v//)-$APPVEYOR_BUILD_NUMBER-cygwin_$ARCH.zip *.exe COPYING VERSION"'

artifacts:
  - name: vcontrold-cygwin_$(ARCH)
    path: '**\*.zip'
    type: zip

deploy:
  - provider: GitHub
    artifact: /.*\.zip/
    description: '$(APPVEYOR_REPO_COMMIT_MESSAGE)'
    draft: false
    prerelease: false
    auth_token:
      secure: qE6hexTUPfCElvkSDkIo9fflU6YweIcrGZ5x2wbw7qHDR2HIYczkMMiSUwvC5y9+
    on:
      appveyor_repo_tag: true       # deploy on tag push only
